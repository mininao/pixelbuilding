{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"socket",
				"socket_api"
			],
			[
				"http",
				"http_api"
			],
			[
				"co",
				"color"
			],
			[
				"set",
				"setByCoords"
			],
			[
				"se",
				"selectedScreens"
			],
			[
				"X",
				"x"
			],
			[
				"y",
				"y"
			],
			[
				"x",
				"x"
			],
			[
				"n",
				"name"
			],
			[
				"c",
				"currentScreen"
			],
			[
				"id",
				"idGet"
			],
			[
				"new",
				"newScreen"
			],
			[
				"dis",
				"displayName"
			],
			[
				"cha",
				"changeData"
			],
			[
				"st",
				"strobe"
			],
			[
				"reset",
				"resetAll"
			],
			[
				"fun",
				"function"
			],
			[
				"pixel",
				"pixel_update"
			],
			[
				"ne",
				"new"
			],
			[
				"con",
				"console"
			],
			[
				"regis",
				"registerScreen"
			],
			[
				"di",
				"displayName"
			],
			[
				"displ",
				"displayColor"
			],
			[
				"px",
				"px"
			],
			[
				"b",
				"background-color"
			],
			[
				"conne",
				"connectScreen"
			],
			[
				"display",
				"displayColor"
			],
			[
				"len",
				"length"
			],
			[
				"po",
				"posY"
			],
			[
				"sc",
				"screen"
			],
			[
				"pos",
				"posX"
			]
		]
	},
	"buffers":
	[
		{
			"file": "index.js",
			"settings":
			{
				"buffer_size": 1096,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/index.html",
			"settings":
			{
				"buffer_size": 2155,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/sound2.html",
			"settings":
			{
				"buffer_size": 1015,
				"line_ending": "Unix"
			}
		},
		{
			"file": "views/connect.ejs",
			"settings":
			{
				"buffer_size": 1084,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/modif.html",
			"settings":
			{
				"buffer_size": 1345,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\nPixelJS 2 Module - Core functions\nPixel storage, update events, get/set, register\nby mininao\nhttp://maxenceaici.fr\n*/\nvar _ = require(\"underscore\");\nvar EventEmitter = require('events').EventEmitter;\n\nvar screens = new Array();\n\n\n/**** REGISTER, GET, SET ******/\nvar register = function(x, y, name, color) {\n	x=parseInt(x);\n	y=parseInt(y);	\n	var newScreen = {\n	    x		: x,\n	    y		: y,\n	    name	: name,\n	    color	: color,\n	    id		: _.uniqueId('screen_')\n  	};\n  	_.defaults(newScreen, {name: \"A screen\", color: \"red\", x: 0, y: 0});\n  	screens.push(newScreen);\n  	ee.emit('update',newScreen);\n  	return newScreen;\n}\nexports.register = register;\n\nvar all = function() {\n	return screens;\n}\nexports.all = all;\n\nvar reset = function() {\n	screens.length = 0;\n	ee.emit('reset');\n	return screens;\n}\nexports.reset = reset;\n\n/* Getters */\nvar get = function(id) {\n  	return _.findWhere(screens, {id: id});\n}\nexports.get = get;\n\nvar getByCoords = function(x, y) {\n	x=parseInt(x);\n	y=parseInt(y);\n	var selectedScreens = _.where(screens, {x:x, y:y});\n	return selectedScreens;\n}\nexports.getByCoords = getByCoords;\n/* End of getters */\n\n/* Setters */\nvar set = function(id, Qx, Qy, name, color) {\n	x=parseInt(Qx);\n	y=parseInt(Qy);	\n	var currentScreen = _.findWhere(screens, {id: id});\n	if ( _.isUndefined(currentScreen) ) {\n        return; // Check if screen exists\n    } else {\n    	if (! _.isUndefined(Qx)) 	{currentScreen.x = x;}\n    	if (! _.isUndefined(Qy)) 	{currentScreen.y = y;}\n    *	if (! _.isUndefined(name)) 	{currentScreen.name = name;}\n    	if (! _.isUndefined(color)) {currentScreen.color = color;}\n		\n		ee.emit('update',currentScreen);\n		return currentScreen;\n  	}\n}\nexports.set = set;\n\nvar setByCoords = function(x, y, name, color) {\n	x=parseInt(x);\n	y=parseInt(y);	\n	var selectedScreens = _.where(screens, {x:x, y:y});\n	if ( _.isEmpty(selectedScreens) ) {\n		console.log(\"setByCoords : Coords not found\");\n        return; // Check if screen exists\n    } else {\n    	_.each(selectedScreens, function(currentScreen){\n	    	if (! _.isUndefined(name)) 	{currentScreen.name = name;}\n	    	if (! _.isUndefined(color)) {currentScreen.color = color;}\n			ee.emit('update',currentScreen);\n    	});\n    }\n		return selectedScreens;\n}\nexports.setByCoords = setByCoords;\n/* End of Setters */\n\n/****** UPDATES & EVENTS *******/\nvar ee = new EventEmitter();\nee.setMaxListeners(50);\nexports.ee = ee;\n",
			"file": "pixel_modules/core.js",
			"file_size": 2390,
			"file_write_time": 130446240315346314,
			"settings":
			{
				"buffer_size": 2391,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pixel_modules/http_api.js",
			"settings":
			{
				"buffer_size": 1831,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pixel_modules/client.js",
			"settings":
			{
				"buffer_size": 895,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pixel_modules/socket_api.js",
			"settings":
			{
				"buffer_size": 593,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 467.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/mininao/Applications/Autoscan/AutoScan-Network-Linux-1.50.sh",
		"/media/mininao/Fichiers/PROJETS/ESIEE-Files/2018/content/index.md",
		"/media/mininao/Fichiers/PROJETS/ESIEE-Files/2018/content/TP/TP71.md",
		"/media/mininao/Fichiers/PROJETS/ESIEE-Files/2018/content/TP/TP81.md",
		"/media/mininao/Fichiers/Ecole/A3P/TPs/TP8-1/Carres.ctxt",
		"/tmp/.fr-EUQHyt/icon_36382/license.txt",
		"/home/mininao/nodejs/pixel2/test/soud2.html",
		"/home/mininao/nodejs/pixel2/test/sound1.html",
		"/home/mininao/nodejs/pixel2/test/index.html",
		"/home/mininao/nodejs/pixel/core.js",
		"/home/mininao/nodejs/pixel/pixel3.js",
		"/home/mininao/nodejs/pixel2/client/connect.ejs",
		"/home/mininao/nodejs/pixel/views/connect.ejs",
		"/home/mininao/nodejs/pixel2/client/index.html",
		"/home/mininao/nodejs/pixel2/client/connect.html",
		"/home/mininao/nodejs/pixel2/package.json",
		"/home/mininao/nodejs/pixel/views/complete.ejs",
		"/media/mininao/Fichiers/Ecole/A3P/sherlocked/Parser.class",
		"/home/mininao/nodejs/FRE_FAC/v4/index.html",
		"/home/mininao/nodejs/FRE_FAC/v/package.json",
		"/home/mininao/nodejs/FRE_FAC/v/index.html",
		"/home/mininao/nodejs/ff/v/index.html",
		"/home/mininao/nodejs/ff/v/package.json",
		"/home/mininao/nodejs/socketio-test/index.html",
		"/home/mininao/nodejs/socketio-test/test1.js",
		"/home/mininao/nodejs/pixel/pixel2.js",
		"/home/mininao/nodejs/ARDUINO/v2/blink1.js",
		"/home/mininao/nodejs/node_arduino1/hello.js",
		"/home/mininao/nodejs/pixel/pixel.js",
		"/home/mininao/nodejs/Angular2/Client/index.html",
		"/home/mininao/nodejs/pixel/client.js",
		"/home/mininao/nodejs/pixel/client/pixel.html",
		"/home/mininao/nodejs/pixel/views/admin.ejs",
		"/home/mininao/Bidules esiee/notes.txt",
		"/home/mininao/.zshrc"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"ccc",
			"x",
			"where",
			"&amp;",
			"app.",
			"	\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"&",
			"app_client."
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1096,
						"regions":
						{
						},
						"selection":
						[
							[
								739,
								739
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "test/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2155,
						"regions":
						{
						},
						"selection":
						[
							[
								9,
								9
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "test/sound2.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1015,
						"regions":
						{
						},
						"selection":
						[
							[
								1015,
								1015
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 17.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "views/connect.ejs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1084,
						"regions":
						{
						},
						"selection":
						[
							[
								556,
								556
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "test/modif.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1345,
						"regions":
						{
						},
						"selection":
						[
							[
								712,
								712
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 5,
					"file": "pixel_modules/core.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2391,
						"regions":
						{
						},
						"selection":
						[
							[
								266,
								266
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "pixel_modules/http_api.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1831,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "pixel_modules/client.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 895,
						"regions":
						{
						},
						"selection":
						[
							[
								108,
								108
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "pixel_modules/socket_api.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 593,
						"regions":
						{
						},
						"selection":
						[
							[
								593,
								593
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "pixel2.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
